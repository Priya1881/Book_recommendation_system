# -*- coding: utf-8 -*-
"""booksrecommendation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sOOIXR64ZG4b4HPUNoyJ2R1NR3imER41
"""

import pandas as pd
import pickle

books=pd.read_csv('/content/drive/MyDrive/books_dataset/Books.csv')
ratings=pd.read_csv('/content/drive/MyDrive/books_dataset/Ratings.csv')
#users=pd.read_csv('/content/drive/MyDrive/books_dataset/Users.csv')

books.head()

books.rename(columns={'Book-Title':'title','Book-Author':'author','Year-Of-Publication':'year','Publisher':'publisher'},inplace=True)

books.shape

ratings.head()

ratings.isnull().sum()

ratings.sample(2)

ratings['User-ID'].value_counts()

books_new=books[['ISBN','title','author','year','publisher','Image-URL-M']]

#we are finding users who have rated more than 200 books
x=ratings['User-ID'].value_counts()>200
y=x[x].index
print(y.shape)
ratings=ratings[ratings['User-ID'].isin(y)]
ratings

#we want the books which received more than 50 ratings
rating_with_books=ratings.merge(books_new,on='ISBN')
rating_with_books.head()

number_rating=rating_with_books.groupby('title')['Book-Rating'].count().reset_index()
number_rating.rename(columns={'Book-Rating':'no_of_ratings'},inplace=True)
final_rating=rating_with_books.merge(number_rating,on='title')
final_rating.shape
final_rating=final_rating[final_rating['no_of_ratings']>=50]

final_rating.drop_duplicates(['User-ID','title'],inplace=True)

final_rating.sample(3)

book_list= set(final_rating['title'].values)
len(book_list)

book_pivot=final_rating.pivot_table(columns='User-ID',index='title',values='Book-Rating')
book_pivot.fillna(0,inplace=True)
book_pivot

from scipy.sparse import csr_matrix
book_sparse=csr_matrix(book_pivot)

from sklearn.neighbors import NearestNeighbors
model=NearestNeighbors(algorithm='auto')
model.fit(book_sparse)

distances, suggestions = model.kneighbors(book_pivot.loc['4 Blondes', :].values.reshape(1, -1))

suggestions

rec_books=[]
for i in range(len(suggestions)):
  rec_books.append(book_pivot.index[suggestions[i]])
  print(book_pivot.index[suggestions[i]])

rec_books[0][0]

images=final_rating[['title','Image-URL-M']]
images=images.groupby('title')['Image-URL-M'].sum()
images['4 Blondes']

book_title=book_pivot.index[suggestions[0][2]]
book_title

pickle.dump(final_rating,open('/content/drive/MyDrive/final_rating.pkl','wb'))

pickle.dump(model,open('/content/drive/MyDrive/model_rec.pkl','wb'))